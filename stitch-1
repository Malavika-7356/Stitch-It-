import { useState } from "react";
import Header from "@/components/Header";
import HeroSection from "@/components/HeroSection";
import DressCard from "@/components/DressCard";
import MeasurementGuide from "@/components/MeasurementGuide";
import ReviewPage from "@/components/ReviewPage";
import { Dialog, DialogContent, DialogHeader, DialogTitle } from "@/components/ui/dialog";
import { Button } from "@/components/ui/button";
import { Badge } from "@/components/ui/badge";
import { Play, Clock, Users, CheckCircle, Ruler, Star } from "lucide-react";

// Import dress images
import summerDress from "@/assets/summer-dress.jpg";
import eveningDress from "@/assets/evening-dress.jpg";
import casualDress from "@/assets/casual-dress.jpg";

const dresses = [
  {
    id: "1",
    name: "Summer Floral Dress",
    image: summerDress,
    difficulty: "Beginner" as const,
    duration: "4-6 hours",
    rating: 4.8,
    description: "A beautiful flowing summer dress perfect for beginners. Features simple seams and an easy-to-follow pattern.",
    videos: [
      { title: "Pattern Preparation", duration: "8 min" },
      { title: "Cutting the Fabric", duration: "12 min" },
      { title: "Sewing the Bodice", duration: "15 min" },
      { title: "Attaching the Skirt", duration: "18 min" },
      { title: "Final Touches", duration: "10 min" }
    ],
    materials: ["2 yards floral cotton", "Matching thread", "Zipper (optional)", "Buttons"],
    techniques: ["Basic straight seams", "Hemming", "Gathering"]
  },
  {
    id: "2", 
    name: "Elegant Evening Dress",
    image: eveningDress,
    difficulty: "Advanced" as const,
    duration: "12-15 hours",
    rating: 4.9,
    description: "Sophisticated A-line evening dress with intricate details. Perfect for special occasions and experienced sewers.",
    videos: [
      { title: "Advanced Pattern Layout", duration: "15 min" },
      { title: "Princess Seam Construction", duration: "25 min" },
      { title: "Invisible Zipper Installation", duration: "20 min" },
      { title: "Lining Attachment", duration: "30 min" },
      { title: "Hand-finished Details", duration: "22 min" }
    ],
    materials: ["3 yards silk/satin", "Lining fabric", "Invisible zipper", "Interfacing"],
    techniques: ["Princess seams", "Invisible zipper", "Hand finishing", "Lining construction"]
  },
  {
    id: "3",
    name: "Casual Sundress", 
    image: casualDress,
    difficulty: "Intermediate" as const,
    duration: "6-8 hours",
    rating: 4.7,
    description: "Comfortable and stylish sundress with pockets. Great for intermediate sewers looking to practice new techniques.",
    videos: [
      { title: "Pocket Construction", duration: "10 min" },
      { title: "Side Seam Assembly", duration: "14 min" },
      { title: "Neckline Finishing", duration: "16 min" },
      { title: "Strap Attachment", duration: "12 min" },
      { title: "Professional Hemming", duration: "8 min" }
    ],
    materials: ["2.5 yards cotton blend", "Bias tape", "Matching thread", "Elastic (optional)"],
    techniques: ["Patch pockets", "Bias tape finishing", "Adjustable straps"]
  }
];

const Index = () => {
  const [selectedDress, setSelectedDress] = useState<typeof dresses[0] | null>(null);
  const [showVideoTutorials, setShowVideoTutorials] = useState(false);
  const [showMeasurementGuide, setShowMeasurementGuide] = useState(false);
  const [showReviewPage, setShowReviewPage] = useState(false);

  return (
    <div className="min-h-screen bg-background">
      <Header />
      <HeroSection />
      
      {/* Dress Gallery */}
      <section id="tutorials" className="py-20">
        <div className="container mx-auto px-4">
          <div className="text-center mb-12">
            <h2 className="text-4xl font-bold text-foreground mb-4">
              Choose Your Next Project
            </h2>
            <p className="text-xl text-muted-foreground max-w-2xl mx-auto">
              Select from our curated collection of dress patterns, each with detailed video tutorials 
              and step-by-step instructions tailored to your skill level.
            </p>
          </div>
          
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
            {dresses.map((dress) => (
              <DressCard
                key={dress.id}
                {...dress}
                onClick={() => setSelectedDress(dress)}
              />
            ))}
          </div>
        </div>
      </section>

      <MeasurementGuide />

      {/* Dress Detail Modal */}
      <Dialog open={!!selectedDress} onOpenChange={() => setSelectedDress(null)}>
        <DialogContent className="max-w-4xl max-h-[90vh] overflow-y-auto">
          {selectedDress && (
            <>
              <DialogHeader>
                <DialogTitle className="text-2xl font-bold text-foreground">
                  {selectedDress.name}
                </DialogTitle>
              </DialogHeader>
              
              <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                <div>
                  <img 
                    src={selectedDress.image} 
                    alt={selectedDress.name}
                    className="w-full h-80 object-cover rounded-lg shadow-soft"
                  />
                  
                  <div className="flex items-center justify-between mt-4">
                    <Badge className={
                      selectedDress.difficulty === "Beginner" ? "bg-green-100 text-green-800" :
                      selectedDress.difficulty === "Intermediate" ? "bg-yellow-100 text-yellow-800" :
                      "bg-red-100 text-red-800"
                    }>
                      {selectedDress.difficulty}
                    </Badge>
                    
                    <div className="flex items-center space-x-4 text-sm text-muted-foreground">
                      <div className="flex items-center space-x-1">
                        <Clock className="h-4 w-4" />
                        <span>{selectedDress.duration}</span>
                      </div>
                      <div className="flex items-center space-x-1">
                        <Users className="h-4 w-4" />
                        <span>{selectedDress.rating} rating</span>
                      </div>
                    </div>
                  </div>
                </div>
                
                <div>
                  <p className="text-muted-foreground mb-6">
                    {selectedDress.description}
                  </p>
                  
                  <div className="space-y-6">
                    <div>
                      <h4 className="font-semibold text-foreground mb-3 flex items-center space-x-2">
                        <Play className="h-5 w-5 text-primary" />
                        <span>Video Tutorials</span>
                      </h4>
                      <div className="space-y-2">
                        {selectedDress.videos.map((video, index) => (
                          <div key={index} className="flex items-center justify-between p-3 bg-secondary/50 rounded-lg hover:bg-secondary/70 transition-colors cursor-pointer">
                            <span className="text-sm font-medium">{video.title}</span>
                            <span className="text-xs text-muted-foreground">{video.duration}</span>
                          </div>
                        ))}
                      </div>
                    </div>
                    
                    <div>
                      <h4 className="font-semibold text-foreground mb-3">Materials Needed</h4>
                      <div className="grid grid-cols-1 gap-2">
                        {selectedDress.materials.map((material, index) => (
                          <div key={index} className="flex items-center space-x-2 text-sm">
                            <CheckCircle className="h-4 w-4 text-green-500" />
                            <span>{material}</span>
                          </div>
                        ))}
                      </div>
                    </div>
                    
                    <div>
                      <h4 className="font-semibold text-foreground mb-3">Techniques You'll Learn</h4>
                      <div className="flex flex-wrap gap-2">
                        {selectedDress.techniques.map((technique, index) => (
                          <Badge key={index} variant="outline">
                            {technique}
                          </Badge>
                        ))}
                      </div>
                    </div>
                  </div>
                  
                  <div className="grid grid-cols-1 gap-3 mt-6">
                    <Button 
                      className="w-full bg-gradient-primary hover:shadow-elegant transition-all duration-300"
                      onClick={() => setShowVideoTutorials(true)}
                    >
                      Start Tutorial
                      <Play className="ml-2 h-4 w-4" />
                    </Button>
                    
                    <div className="grid grid-cols-2 gap-3">
                      <Button 
                        variant="outline"
                        className="w-full"
                        onClick={() => setShowMeasurementGuide(true)}
                      >
                        <Ruler className="mr-2 h-4 w-4" />
                        Measurement Guide
                      </Button>
                      
                      <Button 
                        variant="outline"
                        className="w-full"
                        onClick={() => setShowReviewPage(true)}
                      >
                        <Star className="mr-2 h-4 w-4" />
                        Reviews
                      </Button>
                    </div>
                  </div>
                </div>
              </div>
            </>
          )}
        </DialogContent>
      </Dialog>

      {/* Video Tutorials Modal */}
      <Dialog open={showVideoTutorials} onOpenChange={setShowVideoTutorials}>
        <DialogContent className="max-w-4xl max-h-[90vh] overflow-y-auto">
          {selectedDress && (
            <>
              <DialogHeader>
                <DialogTitle className="text-2xl font-bold text-foreground">
                  Video Tutorials - {selectedDress.name}
                </DialogTitle>
              </DialogHeader>
              
              <div className="space-y-4">
                {selectedDress.videos.map((video, index) => (
                  <div key={index} className="border rounded-lg p-4 hover:bg-secondary/20 transition-colors">
                    <div className="flex items-center justify-between mb-3">
                      <h4 className="font-semibold text-foreground">{video.title}</h4>
                      <Badge variant="outline">{video.duration}</Badge>
                    </div>
                    
                    <div className="aspect-video bg-secondary/30 rounded-lg flex items-center justify-center mb-3">
                      <div className="text-center">
                        <Play className="h-12 w-12 text-primary mx-auto mb-2" />
                        <p className="text-sm text-muted-foreground">Click to play video tutorial</p>
                      </div>
                    </div>
                    
                    <Button 
                      className="w-full" 
                      variant="outline"
                      onClick={() => {
                        // In a real app, this would open the video player
                        console.log(`Playing: ${video.title}`);
                      }}
                    >
                      <Play className="mr-2 h-4 w-4" />
                      Play Tutorial
                    </Button>
                  </div>
                ))}
                
                <div className="flex justify-between pt-4">
                  <Button variant="outline" onClick={() => setShowVideoTutorials(false)}>
                    Back to Details
                  </Button>
                  <Button className="bg-gradient-primary">
                    Complete All Tutorials
                    <CheckCircle className="ml-2 h-4 w-4" />
                  </Button>
                </div>
              </div>
            </>
          )}
        </DialogContent>
      </Dialog>

      {/* Measurement Guide Modal */}
      <Dialog open={showMeasurementGuide} onOpenChange={setShowMeasurementGuide}>
        <DialogContent className="max-w-4xl max-h-[90vh] overflow-y-auto">
          <DialogHeader>
            <DialogTitle className="text-2xl font-bold text-foreground">
              Measurement Guide - {selectedDress?.name}
            </DialogTitle>
          </DialogHeader>
          
          <MeasurementGuide />
          
          <div className="flex justify-between pt-4">
            <Button variant="outline" onClick={() => setShowMeasurementGuide(false)}>
              Back to Details
            </Button>
          </div>
        </DialogContent>
      </Dialog>

      {/* Review Page Modal */}
      <Dialog open={showReviewPage} onOpenChange={setShowReviewPage}>
        <DialogContent className="max-w-4xl max-h-[90vh] overflow-y-auto">
          <DialogHeader>
            <DialogTitle className="text-2xl font-bold text-foreground">
              Reviews - {selectedDress?.name}
            </DialogTitle>
          </DialogHeader>
          
          {selectedDress && (
            <ReviewPage 
              dressName={selectedDress.name}
              overallRating={selectedDress.rating}
              totalReviews={156} // Mock number of reviews
            />
          )}
          
          <div className="flex justify-between pt-4">
            <Button variant="outline" onClick={() => setShowReviewPage(false)}>
              Back to Details
            </Button>
          </div>
        </DialogContent>
      </Dialog>
    </div>
  );
};

export default Index;
